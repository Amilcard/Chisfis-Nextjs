#!/bin/bash

echo "üß™ TESTS COMPLETS - INSCRIPTION RAPIDE ET APIS"
echo "==============================================="
echo ""

BASE_URL="http://localhost:3000"

# Couleurs pour l'affichage
GREEN='\033[0;32m'
RED='\033[0;31m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour afficher un succ√®s
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# Fonction pour afficher une erreur
error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Fonction pour afficher une info
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# Fonction pour afficher un warning
warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

echo "1Ô∏è‚É£ TEST DES NOUVELLES APIs"
echo "============================"
echo ""

# Test de l'API d'inscription rapide
info "Test de l'API d'inscription rapide..."
quick_signup_response=$(curl -s -X POST "$BASE_URL/api/auth/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test.parent@example.com",
    "password": "password123",
    "prenomParent": "Marie",
    "isQuickSignup": true
  }' | jq -r '.success' 2>/dev/null)

if [ "$quick_signup_response" = "true" ]; then
    success "API d'inscription rapide fonctionne"
else
    error "Probl√®me avec l'API d'inscription rapide"
fi

# Test de l'API de cr√©ation d'enfant
info "Test de l'API de cr√©ation d'enfant..."
child_creation_response=$(curl -s -X POST "$BASE_URL/api/children/create" \
  -H "Content-Type: application/json" \
  -d '{
    "parentId": "123",
    "prenom": "Emma",
    "age": 8
  }' | jq -r '.success' 2>/dev/null)

if [ "$child_creation_response" = "true" ]; then
    success "API de cr√©ation d'enfant fonctionne"
else
    error "Probl√®me avec l'API de cr√©ation d'enfant"
fi

# Test de l'API d'inscription √† une activit√©
info "Test de l'API d'inscription √† une activit√©..."
activity_inscription_response=$(curl -s -X POST "$BASE_URL/api/activities/inscription" \
  -H "Content-Type: application/json" \
  -d '{
    "childId": "456",
    "activityId": "1",
    "message": "Emma souhaite participer √† cette activit√©"
  }' | jq -r '.success' 2>/dev/null)

if [ "$activity_inscription_response" = "true" ]; then
    success "API d'inscription √† une activit√© fonctionne"
else
    error "Probl√®me avec l'API d'inscription √† une activit√©"
fi

echo ""
echo "2Ô∏è‚É£ TEST DE L'INT√âGRATION UX"
echo "============================"
echo ""

# V√©rifier la pr√©sence du bouton d'inscription rapide
info "V√©rification de la pr√©sence du bouton d'inscription rapide..."
quick_button_check=$(curl -s "$BASE_URL/activity/1" | grep -o "Inscription rapide" | wc -l)

if [ "$quick_button_check" -gt 0 ]; then
    success "Bouton d'inscription rapide pr√©sent sur la page d'activit√©"
else
    warning "Bouton d'inscription rapide non d√©tect√© (peut √™tre normal si connect√©)"
fi

# V√©rifier la pr√©sence du composant QuickInscriptionForm
info "V√©rification du composant QuickInscriptionForm..."
if [ -f "/Users/laidhamoudi/Downloads/Chisfis-Nextjs/src/components/QuickInscriptionForm.tsx" ]; then
    success "Composant QuickInscriptionForm existe"
else
    error "Composant QuickInscriptionForm manquant"
fi

echo ""
echo "3Ô∏è‚É£ TEST DU PARCOURS COMPLET"
echo "============================"
echo ""

info "Test du parcours d'inscription rapide complet..."

# √âtape 1: Page d'activit√© accessible
activity_page_status=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/activity/1")
if [ "$activity_page_status" = "200" ]; then
    success "√âtape 1: Page d'activit√© accessible"
else
    error "√âtape 1: Probl√®me d'acc√®s √† la page d'activit√© ($activity_page_status)"
fi

# √âtape 2: APIs disponibles
info "√âtape 2: V√©rification des endpoints API..."

# V√©rifier que les routes API existent
for endpoint in "auth/register" "children/create" "activities/inscription"; do
    api_status=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$BASE_URL/api/$endpoint" -H "Content-Type: application/json" -d '{}')
    if [ "$api_status" -ne "404" ]; then
        success "API /$endpoint disponible (status: $api_status)"
    else
        error "API /$endpoint non trouv√©e"
    fi
done

echo ""
echo "4Ô∏è‚É£ VALIDATION DU DESIGN SYSTEM"
echo "==============================="
echo ""

# V√©rifier l'utilisation des classes brand-green
info "V√©rification de l'utilisation du design system..."
brand_green_usage=$(grep -r "brand-green" /Users/laidhamoudi/Downloads/Chisfis-Nextjs/src/components/QuickInscriptionForm.tsx | wc -l)

if [ "$brand_green_usage" -gt 0 ]; then
    success "Design system respect√© (brand-green utilis√©)"
else
    warning "Usage du design system √† v√©rifier"
fi

# V√©rifier l'import du composant Button
button_import=$(grep -r "Button" /Users/laidhamoudi/Downloads/Chisfis-Nextjs/src/components/QuickInscriptionForm.tsx | head -1)
if [ ! -z "$button_import" ]; then
    success "Composant Button du design system utilis√©"
else
    warning "V√©rifier l'utilisation du composant Button"
fi

echo ""
echo "5Ô∏è‚É£ R√âSUM√â ET RECOMMANDATIONS"
echo "============================="
echo ""

# Compter les succ√®s
total_tests=8
passed_apis=0
passed_ux=0

# V√©rifier les APIs
if [ "$quick_signup_response" = "true" ]; then ((passed_apis++)); fi
if [ "$child_creation_response" = "true" ]; then ((passed_apis++)); fi
if [ "$activity_inscription_response" = "true" ]; then ((passed_apis++)); fi

# V√©rifier l'UX
if [ "$activity_page_status" = "200" ]; then ((passed_ux++)); fi
if [ -f "/Users/laidhamoudi/Downloads/Chisfis-Nextjs/src/components/QuickInscriptionForm.tsx" ]; then ((passed_ux++)); fi

echo "üìä STATISTIQUES:"
echo "   ‚Ä¢ APIs fonctionnelles: $passed_apis/3"
echo "   ‚Ä¢ Int√©gration UX: $passed_ux/2"
echo "   ‚Ä¢ Design system: ‚úì Conforme"

if [ $passed_apis -eq 3 ] && [ $passed_ux -eq 2 ]; then
    echo ""
    success "üéâ INSCRIPTION RAPIDE PR√äTE !"
    echo ""
    echo "üöÄ PROCHAINES √âTAPES:"
    echo "   1. D√©marrer le serveur: npm run dev"
    echo "   2. Tester sur: $BASE_URL/activity/1"
    echo "   3. Cliquer sur 'Inscription rapide'"
    echo "   4. Valider le parcours complet"
    echo ""
    echo "üí° FONCTIONNALIT√âS DISPONIBLES:"
    echo "   ‚Ä¢ Inscription parent + enfant en une fois"
    echo "   ‚Ä¢ Int√©gration directe depuis la page d'activit√©"
    echo "   ‚Ä¢ Respect du design system existant"
    echo "   ‚Ä¢ Messages UX clairs et rassurants"
    echo "   ‚Ä¢ Proposition d'aides financi√®res post-inscription"
else
    warning "Certains tests ont √©chou√©. V√©rifiez les erreurs ci-dessus."
fi

echo ""
echo "üìù POUR CONTINUER LE D√âVELOPPEMENT:"
echo "   ‚Ä¢ Ajouter la validation frontend des formulaires"
echo "   ‚Ä¢ Impl√©menter la v√©rification email"
echo "   ‚Ä¢ Connecter une vraie base de donn√©es"
echo "   ‚Ä¢ Ajouter les tests unitaires"
echo ""
